module Pod

  class Target

    # Returns the paths of the files generated for a target.
    #
    class PathsProvider

      # @return [Pathname] The root of the sandbox of the target.
      #
      attr_reader :root

      # @return [String] The label of the target.
      #
      attr_reader :label

      # @param [#to_s] label @see label
      # @param [Pathname, String] root @see root
      #
      def initialize(label, root)
        @label = label.to_s
        @root = Pathname.new(root)
      end

      public

      # @!group Common Paths

      #-----------------------------------------------------------------------#

      # @return [Pathname] the absolute path of the xcconfig file.
      #
      def xcconfig_path
        root + "#{label}.xcconfig"
      end

      # @return [Pathname] the absolute path of the private xcconfig file.
      #
      def xcconfig_private_path
        root + "#{label}-Private.xcconfig"
      end

      # @return [Pathname] the absolute path of the prefix header file.
      #
      def prefix_header_path
        root + "#{label}-prefix.pch"
      end

      # @return [Pathname] the absolute path of the bridge support file.
      #
      def bridge_support_path
        root + "#{label}.bridgesupport"
      end

      # @return [Pathname] the path of the dummy source generated by CocoaPods
      #
      def dummy_source_path
        root + "#{label}-dummy.m"
      end

      public

      # @!group Aggregate Target Paths

      #-----------------------------------------------------------------------#

      attr_accessor :client_root

      # @return [Pathname] the absolute path of the header file which contains
      #         the information about the installed pods.
      #
      def target_environment_header_path
        root + "#{label}-environment.h"
      end

      # @return [Pathname] The absolute path of acknowledgements file.
      #
      # @note   The acknowledgements generators add the extension according to
      #         the file type.
      #
      def acknowledgements_basepath
        root + "#{label}-acknowledgements"
      end

      # @return [Pathname] The absolute path of the copy resources script.
      #
      def copy_resources_script_path
        root + "#{label}-resources.sh"
      end

      # @return [String] The xcconfig path of the root from the `$(SRCROOT)`
      #         variable of the user's project.
      #
      def relative_pods_root
        "${SRCROOT}/#{relative_to_srcroot(root)}"
      end

      # @return [String] The path of the xcconfig file relative to the root of
      #         the user project.
      #
      def xcconfig_relative_path
        relative_to_srcroot(xcconfig_path).to_s
      end

      # @return [String] The path of the copy resources script relative to the
      #         root of the user project.
      #
      def copy_resources_script_relative_path
        "${SRCROOT}/#{relative_to_srcroot(copy_resources_script_path)}"
      end

      private

      # @!group Private Helpers

      #-----------------------------------------------------------------------#

      # Computes the relative path of a sandboxed file from the `$(SRCROOT)`
      # variable of the user's project.
      #
      # @param  [Pathname] path
      #         A relative path from the root of the sandbox.
      #
      # @return [String] The computed path.
      #
      def relative_to_srcroot(path)
        path.relative_path_from(client_root).to_s
      end

      #-----------------------------------------------------------------------#

    end

  end
end
